[tool.poetry]
name = "support-matching"
version = "0.2.0"
description = "Addressing Missing Sources with Adversarial Support-Matching"
authors = ["PAL <info@wearepal.com>"]
packages = [
  { include = "clustering" },
  { include = "advrep" },
  { include = "shared" },
  { include = "hydra_plugins" }
]
include=["clustering/py.typed", "advrep/py.typed", "shared/py.typed"]
classifiers=[
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Operating System :: OS Independent",
  "Typing :: Typed",
]
readme="README.md"

[tool.poetry.dependencies]
python = "^3.8, <3.10"
GitPython = { version = ">=2.1.11" }
hydra-core = { version = "^1.1.0" }
hydra-submitit-launcher = { version = "^1.1.5" }
lapjv = "*"
matplotlib = ">= 3.0.2, < 3.3.1"
numpy = { version = ">=1.22" }
pandas = { version = "^1.1" }
pillow = "*"
scikit-image = ">= 0.14"
scikit_learn = { version = ">=0.20.1" }
scipy = { version = ">=1.2.1" }
seaborn = { version = ">=0.9.0" }
teext = "*"
tqdm = { version = ">=4.31.1" }
typer = "*"
wandb = "*"
aioredis = "^1.3.1"
umap-learn = "^0.5.1"
llvmlite = ">=0.35.0.,<0.39"
ranzen = {version = "^1.2.1", extras = ["hydra"]}
torch-conduit = {git = "https://github.com/wearepal/conduit.git", branch = "main"}
ethicml = "^0.6.0"

[tool.poetry.dev-dependencies]
black = "*"
isort = "*"
mypy = "*"
pre-commit = "*"
pytest = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py37']

[tool.isort]
known_third_party = [
  "black",
  "click",
  "click_option_group",
  "ethicml",
  "hydra",
  "matplotlib",
  "mypy",
  "numpy",
  "omegaconf",
  "pandas",
  "pylint",
  "pytest",
  "scipy",
  "setuptools",
  "sklearn",
  "torch",
  "tqdm",
  "wandb",
]
known_future_library = []
extra_standard_library = ["dataclasses", "__future__", "typing_extensions"]
line_length = 88
profile = "black"
force_sort_within_sections = "True"
classes = ["MISSING", "TYPE_CHECKING", "LAFTR"]

[tool.pyright]
pythonVersion = "3.8"
typeCheckingMode = "strict"
reportMissingTypeStubs = "none"
reportUnknownParameterType = "none"
reportUnknownArgumentType = "none"
reportUnknownLambdaType = "none"
reportUnknownVariableType = "none"
reportUnknownMemberType = "none"
reportMissingTypeArgument = "none"
exclude = ["outputs", "multirun", "results", "data", "local_logging"]
