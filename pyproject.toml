[tool.poetry]
name = "suds"
version = "0.2.0"
description = "Fair distribution matching"
authors = ["PAL <info@predictive-analytics-lab.com>"]
packages = [
  { include = "clustering" },
  { include = "advrep" },
  { include = "shared" },
]
include=["clustering/py.typed", "advrep/py.typed", "shared/py.typed"]
classifiers=[
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Operating System :: OS Independent",
  "Typing :: Typed",
]
readme="README.md"

[[tool.poetry.source]]
name = "pytorch_cpu"
url = "https://download.pytorch.org/whl/cpu/"
secondary = true

[tool.poetry.dependencies]
python = "^3.7.1"
EthicML = "0.2.0"
GitPython = ">= 2.1.11"
hydra-core = "^1.1.0"
hydra-ray-launcher = "^1.1.0"
hydra-submitit-launcher = "^1.1.5"
lapjv = "*"
matplotlib = ">= 3.0.2, < 3.3.1"
numpy = ">= 1.15"
faiss-cpu = "*"
pandas = ">= 1.0"
pillow = "*"
pipenv = ">= 2018.11.26"
scikit-image = ">= 0.14"
palkit = "^0.3.13"
scikit_learn = ">= 0.20.1"
scipy = ">= 1.2.1"
seaborn = ">= 0.9.0"
teext = "*"
torch = { version = "=1.9.0+cpu", source = "pytorch_cpu" }
torchvision = { version = "=0.10.0+cpu", source = "pytorch_cpu" }
tqdm = ">= 4.31.1"
typer = "*"
typing-extensions = ">= 3.7.2"
wandb = "*"

[tool.poetry.dev-dependencies]
black = "*"
isort = "*"
mypy = "*"
pre-commit = "*"
pytest = "*"
python-type-stubs = {git = "https://github.com/predictive-analytics-lab/python-type-stubs.git", branch = "main" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py37']

[tool.isort]
known_third_party = [
  "black",
  "click",
  "click_option_group",
  "ethicml",
  "hydra",
  "matplotlib",
  "mypy",
  "numpy",
  "omegaconf",
  "pandas",
  "pylint",
  "pytest",
  "scipy",
  "setuptools",
  "sklearn",
  "torch",
  "tqdm",
  "wandb",
]
known_future_library = []
extra_standard_library = ["dataclasses", "__future__", "typing_extensions"]
line_length = 88
profile = "black"
force_sort_within_sections = "True"
classes = ["MISSING", "TYPE_CHECKING", "LAFTR"]

[tool.pyright]
pythonVersion = "3.7"
typeCheckingMode = "strict"
reportMissingTypeStubs = "none"
reportUnknownParameterType = "none"
reportUnknownArgumentType = "none"
reportUnknownLambdaType = "none"
reportUnknownVariableType = "none"
reportUnknownMemberType = "none"
reportMissingTypeArgument = "none"
