---
name: CI

on:
  pull_request:
    branches:
    - main

jobs:
  format_with_black:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install black
      run: |
        pip install black
    - name: Format with black
      run: |
        python -m black --check .

  format_with_isort:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install isort
      run: |
        pip install isort
    - name: Format with isort
      run: |
        isort --diff --check .

  # run_tests:

  #   runs-on: ubuntu-latest
  #   steps:
  #   #----------------------------------------------
  #   #       check-out repo and set-up python
  #   #----------------------------------------------
  #   - name: Check out repository
  #     uses: actions/checkout@v2
  #   - name: Set up Python 3.7
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.7
  #   #----------------------------------------------
  #   #  -----  install & configure poetry  -----
  #   #----------------------------------------------
  #   - name: Install Poetry
  #     uses: snok/install-poetry@v1.2
  #     with:
  #       virtualenvs-create: true
  #       virtualenvs-in-project: true
  #       installer-parallel: true
  #   #----------------------------------------------
  #   #       load cached venv if cache exists
  #   #----------------------------------------------
  #   - name: Set up Poetry cache for Python dependencies
  #     id: cached-poetry-dependencies
  #     uses: actions/cache@v2
  #     with:
  #       path: .venv
  #       key: venv2-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    # #----------------------------------------------
    # # install dependencies if cache does not exist
    # #----------------------------------------------
    # - name: Install dependencies
    #   if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
    #   run: poetry install --no-interaction --no-root

    # - name: Run tests
    #   run: |
    #     poetry run python -m pytest -vv tests/
